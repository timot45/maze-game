// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level erroerrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr":
            case "level2":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. . . . . . . . . . . 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 . 2 2 2 2 2 
. 2 2 . . . . . 2 2 . 2 2 2 2 2 
. 2 . . 2 2 2 2 2 2 . . . 2 2 2 
. 2 . . . . . 2 2 2 . . . . . 2 
. 2 . 2 2 2 . 2 2 2 . 2 2 2 . . 
. 2 . 2 2 . . 2 2 2 . 2 2 2 2 . 
. 2 . 2 2 2 2 2 2 2 . 2 2 2 2 . 
. 2 . . . . . . . . . 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 . . . 2 2 2 
. . . . . . . . 2 . . 2 . 2 2 2 
2 2 2 2 . 2 2 . . . 2 2 . . 2 2 
2 2 2 . . . 2 2 2 2 2 2 . . 2 2 
2 2 2 2 2 2 2 2 2 2 2 . . 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.collectibleInsignia,sprites.builtin.brick,sprites.castle.rock1], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex``, img`
2 2 . 2 2 2 2 2 2 2 2 2 2 . 2 2 
2 2 . . . . 2 2 2 2 . 2 2 . 2 2 
. . . . 2 . 2 2 2 . . 2 2 . . 2 
. 2 2 2 2 . . 2 . . 2 2 . . . . 
2 2 2 . . . . . . 2 2 2 . 2 2 2 
2 2 2 . 2 2 2 2 . 2 2 . . 2 2 2 
2 . . . . . 2 2 . . . . 2 2 2 . 
. . 2 2 2 . . 2 2 . . . . . . . 
. 2 2 2 2 . . . . . . . . . . . 
2 2 . . . . 2 2 2 . 2 2 2 2 . . 
2 . . 2 2 2 2 2 2 . . . . 2 2 2 
2 2 2 2 . . . . . . 2 2 . . . 2 
. . . . . 2 2 . . 2 2 2 2 2 . 2 
2 2 2 2 2 . . . . 2 2 2 2 2 2 2 
2 . . . . . 2 . 2 2 2 2 2 2 2 2 
. . 2 2 2 2 . . 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.builtin.brick,sprites.castle.rock2,sprites.builtin.crowd3], TileScale.Sixteen);
            case "level5":
            case "level5":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex`1000100002030202020202020202010202020202020202010201010101010101020202020202020101020101020202010101020202010202010101020202020201010202020102020201010101010202010101020201010202010101020202010102010202020102020102010102020102020102010201020202020201020201020201020102010101010102020202010201010101020102020202020202010201010201010201010202020201010102010102020101020101010101010201020201020202010101020202020202010202010102020202010202020202020102020201020202010101010101010101010102020202010102020202020202020202020202`, img`
2 . 2 2 2 2 2 2 2 2 . 2 . . 2 2 
2 . 2 . 2 . . . . . . . . . 2 2 
2 . 2 . . 2 . . 2 2 2 . . . 2 2 
2 . . . . . . 2 2 2 2 2 . . 2 2 
2 . 2 2 2 . . . . . 2 2 . . . 2 
2 . . 2 2 . . . 2 2 2 . . 2 . 2 
2 2 . 2 2 . 2 . . 2 2 . 2 2 . 2 
. 2 . 2 2 2 2 2 . 2 2 . 2 2 . 2 
. 2 . . . . . 2 2 2 2 . 2 . . . 
. 2 . 2 2 2 2 2 2 2 . 2 . . 2 . 
. 2 . . 2 2 2 2 . . . 2 . . 2 2 
. . 2 . . . . . . 2 . 2 2 . 2 2 
2 . . . 2 2 2 2 2 2 . 2 2 . . 2 
2 2 2 . 2 2 2 2 2 2 . 2 2 2 . 2 
2 2 . . . . . . . . . . . 2 2 2 
2 . . 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.castle.rock2,sprites.castle.shrub,sprites.dungeon.collectibleBlueCrystal], TileScale.Sixteen);
            case "level6":
            case "level6":return tiles.createTilemap(hex``, img`
2 . . 2 2 2 2 2 2 2 . 2 2 2 2 2 
. . . 2 2 2 2 2 2 2 . 2 2 2 2 2 
2 . . . . . . . . . . . . 2 2 . 
2 . 2 2 2 . . . 2 2 2 . . . . . 
2 2 2 2 . . 2 . . 2 2 . 2 2 2 2 
2 . . . . 2 2 2 . . 2 . 2 2 2 2 
2 2 2 2 2 2 2 2 2 . 2 2 2 2 2 2 
2 . 2 2 . . . . . . . . . . . 2 
2 . . . . 2 2 2 2 2 . 2 2 2 . 2 
2 2 . . 2 2 2 2 . . 2 2 2 2 . 2 
2 2 . 2 2 . 2 2 . 2 2 . 2 2 . 2 
2 . . 2 . . . . 2 2 2 . 2 2 . 2 
2 . 2 . 2 2 . . . . . . 2 2 2 2 
2 . . . . . . 2 2 . . . . . 2 2 
. . 2 2 2 2 2 2 2 2 2 2 2 . . 2 
. 2 2 2 2 . . . . . . . . . . 2 
`, [myTiles.transparency16,sprites.dungeon.collectibleBlueCrystal,sprites.dungeon.chestClosed,sprites.builtin.oceanDepths9], TileScale.Sixteen);
            case "level7":
            case "level7":return tiles.createTilemap(hex``, img`
2 . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . 2 2 2 2 2 2 2 2 . . . . 2 
2 2 . . . 2 2 2 2 . . . 2 2 . 2 
2 . 2 2 . 2 2 2 . . 2 2 2 2 2 2 
2 . . 2 . . 2 2 . . . 2 2 2 2 2 
2 2 2 . . . . . 2 2 . . 2 2 2 2 
2 2 2 . . 2 . 2 2 2 2 . 2 2 2 2 
2 2 . . 2 2 . . 2 2 2 . 2 2 2 2 
2 2 . 2 2 2 . . . 2 2 . . 2 2 2 
2 2 2 2 2 . . 2 . . 2 2 . 2 2 2 
2 2 2 . . . 2 2 2 2 2 2 . . 2 2 
. . . . . . . . . . . . . . 2 2 
2 2 . 2 2 2 2 . . 2 . 2 2 . 2 2 
2 2 . 2 2 2 2 . . 2 . . 2 . . 2 
2 . . 2 2 2 2 . . 2 2 . 2 2 . 2 
2 2 2 2 2 2 2 . . 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.builtin.oceanDepths9,sprites.builtin.coral5,sprites.builtin.oceanDepths3,sprites.dungeon.chestOpen], TileScale.Sixteen);
            case "level8":
            case "level8":return tiles.createTilemap(hex``, img`
2 2 . 2 2 . 2 2 . . . . . 2 2 2 
2 2 . 2 . . 2 . . 2 2 2 . . 2 2 
2 2 . 2 . . . . 2 2 2 2 2 . 2 2 
2 2 . 2 . 2 . 2 2 2 2 2 2 . 2 2 
2 2 . 2 . 2 . . 2 2 2 . 2 . 2 2 
2 2 . 2 . 2 2 . 2 . . . 2 . . 2 
2 2 . 2 . . 2 . . . 2 2 2 . 2 2 
2 2 . 2 2 . . 2 2 2 2 2 . . 2 2 
2 2 . . 2 2 . . . . . . . . 2 2 
2 2 2 . . 2 2 2 2 2 2 2 . . 2 2 
2 2 2 . . . . . . 2 2 . . 2 2 2 
2 2 2 . 2 2 . 2 . . . . 2 2 2 2 
2 2 . . 2 2 . 2 2 2 2 . . 2 2 2 
2 2 . 2 2 2 . 2 2 2 2 2 . 2 2 2 
2 . . 2 2 2 . . 2 2 2 2 . . 2 2 
2 2 2 2 2 2 2 . . 2 2 2 2 . 2 2 
`, [myTiles.transparency16,sprites.castle.tileGrass2,sprites.builtin.coral1,sprites.castle.tileGrass1], TileScale.Sixteen);
            case "level11":
            case "level11":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 . . . 2 
2 . . . . . . . . . . . . 2 2 2 
2 . . 2 2 . 2 2 2 2 . . 2 2 2 . 
2 . 2 2 . . . . 2 2 . 2 . . 2 . 
2 2 2 . . . . . . 2 . 2 2 . . . 
2 . 2 . 2 2 . 2 . 2 2 2 2 2 . 2 
2 . . . 2 2 . 2 . . 2 2 2 . . 2 
2 2 . 2 2 . . 2 2 . . . . . 2 2 
2 2 . 2 2 . 2 2 2 . 2 2 . 2 2 2 
2 . . 2 2 . . . 2 . 2 2 2 2 2 . 
2 2 2 2 . . 2 2 2 . . . . . 2 . 
2 2 2 2 . 2 2 2 2 . . 2 2 . . . 
2 2 2 2 2 2 2 2 . . . . 2 2 2 2 
. . . 2 2 2 2 . . 2 . . . . 2 2 
2 2 . . . . . . . . . 2 2 . . . 
2 2 2 2 2 2 2 . 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.castle.tileGrass2,sprites.castle.tileDarkGrass1,sprites.castle.tileDarkGrass2], TileScale.Sixteen);
            case "level9":
            case "level9":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 . . . 2 
2 . . . . . . . . . . . . 2 . . 
2 2 2 . . 2 2 2 . . 2 2 2 2 2 . 
2 2 . . 2 2 2 2 2 . . 2 2 2 2 2 
2 2 . . 2 2 2 2 2 2 . . . . 2 2 
2 2 2 . 2 2 2 2 2 2 . 2 2 . . 2 
2 2 2 2 2 2 2 2 . . . 2 2 2 . 2 
. 2 2 2 2 . . . . . 2 2 2 2 2 2 
. . . . . . 2 2 2 . 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 . . 2 2 2 2 2 
2 2 2 . . . . . . . . . . 2 2 2 
2 . . . 2 2 2 2 2 . 2 2 . . 2 2 
2 2 2 2 2 2 2 2 . . 2 2 2 . . 2 
2 2 2 2 2 2 2 . . . 2 2 2 2 . 2 
2 . . . . . . . 2 2 2 2 2 2 2 2 
2 . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.builtin.oceanDepths9,sprites.dungeon.chestOpen,sprites.castle.tilePath5], TileScale.Sixteen);
            case "level10":
            case "level10":return tiles.createTilemap(hex``, img`
2 2 2 . 2 2 2 2 2 2 2 2 . 2 2 2 
2 . 2 . . . 2 2 2 2 . . . 2 2 2 
2 . 2 2 2 . . . 2 . . . . . 2 2 
2 . 2 2 2 2 2 . . 2 2 2 2 . 2 2 
2 . 2 2 2 . . . . 2 2 2 2 2 2 2 
2 . 2 2 2 . 2 2 . . . . . . . 2 
2 . 2 2 2 . 2 2 2 . . 2 2 2 . . 
2 . . 2 2 . 2 2 2 . 2 2 2 2 2 2 
2 . . . . . 2 2 2 . . . 2 2 2 2 
2 . 2 . . 2 . . . . 2 . 2 2 2 2 
. . 2 2 2 . . 2 2 . 2 . . 2 2 2 
. 2 2 2 . . 2 2 . . 2 2 . . . 2 
2 2 2 2 2 2 2 . . 2 2 2 . 2 . . 
. . 2 2 . . . . 2 2 2 . . 2 2 2 
2 . . . . 2 2 2 2 . . . . 2 2 2 
2 2 2 2 2 2 2 2 . . 2 2 . 2 2 2 
`, [myTiles.transparency16,sprites.castle.tileDarkGrass2,sprites.builtin.crowd0,sprites.builtin.crowd7,sprites.castle.tilePath4], TileScale.Sixteen);
            case "level1":
            case "level1":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 . 2 2 . 2 2 2 2 2 2 
. . 2 2 2 2 . 2 2 . . . . . . . 
2 . . . . . . . . . . . 2 2 2 . 
2 2 2 . . . . 2 2 2 2 . 2 2 2 . 
2 2 . . 2 2 . 2 2 2 2 . . 2 2 . 
2 2 . . . 2 . . 2 2 2 2 . 2 2 . 
2 . . 2 . . 2 . 2 . . . . . . . 
. . . 2 2 . 2 . 2 2 2 2 . 2 2 2 
2 2 . . 2 2 2 . 2 2 2 2 . 2 2 2 
2 2 . . . . 2 2 2 2 2 2 . 2 2 2 
2 2 . 2 2 . . . . . 2 2 . 2 2 2 
2 2 . . . . 2 2 2 . . . . 2 2 2 
2 2 2 2 2 . 2 2 2 2 2 . . 2 2 2 
. . . . . . 2 2 2 2 2 . . 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.darkGroundNorthWest1,sprites.dungeon.collectibleInsignia,sprites.dungeon.collectibleRedCrystal], TileScale.Sixteen);
            case "level12":
            case "level12":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 . . 2 2 2 2 2 . 2 
. . . 2 2 2 2 2 . . . 2 2 . . 2 
2 2 . . . . 2 . . . . . . . . 2 
2 . . . . . . 2 2 2 2 2 2 . . 2 
. . 2 2 2 2 2 2 2 2 . . . . 2 2 
2 . 2 2 2 . . . 2 . . 2 2 . 2 2 
2 . . . . . 2 2 . . 2 2 2 . . 2 
2 2 2 . . 2 2 . . 2 2 2 2 2 . 2 
2 2 2 2 2 . . . . . 2 2 2 2 2 2 
2 2 2 2 . . . 2 2 . 2 2 2 2 . . 
2 2 2 . . 2 . 2 2 . 2 2 2 . . 2 
2 2 . . 2 2 . . 2 . . 2 . . 2 2 
2 . . 2 2 2 2 . . . . . . 2 2 2 
. . 2 2 2 2 2 . . 2 . . 2 2 2 2 
. 2 2 2 2 2 . . 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 . . 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.builtin.oceanDepths4,sprites.castle.rock1,sprites.builtin.coral1,sprites.builtin.coral2], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
